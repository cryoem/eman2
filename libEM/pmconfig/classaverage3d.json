/* JSON file to make the e2spt_classaverage wizard */
[
  {
    "TITLE":"e2spt_classaverage",
    "INST":"This Wizard is to Help users align, average and classify subtomograms using e2spt_classaverage.py. This is a very large program with many options, and it is best to run this using some sort of paralleism mecvhanism. This program is CUDA enabled",
    "WIDGETS":[]
  },
  {
    "TITLE":"Input subtomogram",
    "INST":"Select the input subtomogram stack (usualy from the subtomograms directory)",
    "WIDGETS":[
      "input"
    ]
  },
  {
    "TITLE":"Reference subtomogram",
    "INST":"Select the subtomogram reference. If none is selected, than a reference will be automaticcaly generated using recursive binary pairwise comparisions. This only works for homogenious subtomograms",
    "WIDGETS":[
      "ref"
    ]
  },
  {
    "TITLE":"Output average",
    "INST":"Choose the filename of the output subtomogram average",
    "WIDGETS":[
      "output"
    ]
  },
  {
    "TITLE":"Intermidtae save options",
    "INST":"To save the average after each iteration, check 'savesteps'. To save the final alignment position of each subtomogram, check 'saveali'. To save the alignment for each particle for each iteration, check, 'saveallalign'.",
    "WIDGETS":[
      "savesteps",
      "saveali",
      "saveallalign"
    ]
  },
  {
    "TITLE":"Number of iterations",
    "INST":"Cooose the number of iterations for subtomogram alignment and averaging. If you select 0 and ref = '', then only a reference model will be generated.",
    "WIDGETS":[
      "iter"
    ]
  },
  {
    "TITLE":"Shrink options",
    "INST":"To speed alignment, you can shrink down your subtomogram. This may lower the alignment accuracy depending on to what fraction of niquist the signal goes to. You have the option of having indepenet shrinks for the course and refine steps. Even if you have signal to a high fraction of niquist, you could have course shrink=2 and refineshrink=1",
    "WIDGETS":[
      "shrink",
      "shrinkrefine"
    ]
  },
  {
    "TITLE":"Subtomogram culling",
    "INST":"Using 'keep', you can choose the fraction of particles to keep based on the chosen similarity metric(highest X fraction are kept). If you want to use standard deviations rather than absolute values, check 'keepsig'.",
    "WIDGETS":[
      "keep",
      "keepsig"
    ]
  },
  {
    "TITLE":"Refinement options",
    "INST":"After an initial course search the best N peaks are refined. Set this number using ;npeakstorefine'. After alignment and averaging, the average is centered on its center of mass. This may not be desirable for all particle shapes, to turn this off, check 'nocenterofmass'",
    "WIDGETS":[
      "npeakstorefine",
      "nocenterofmass"
    ]
  },
  {
    "TITLE":"Subtomogram symmetry",
    "INST":"Set the symmetry of the subtomograms. IF there is no symmetry, set this value to 'c1'. If your subtomogram has symmetry, but is not aligned to the symmetry axis, aslo set this to 'c1'(this the case when you do not have a reference. ALWAYS set sym to c1 if ref=''). If you have a reference that has symmetry, you can align it to the symmetry axis using e2symsearch3d.py. Using symmtry can help in two ways. First it effictivly increases the number of self similar particles and boost SNR of your average after it is applied. Secondly, the search space can be reduced by only searching over the asymmetrix unit.",
    "WIDGETS":[
      "sym"
    ]
  },
  {
    "TITLE":"Preprocess subtomos",
    "INST":"If desired, select the processor to preprosess your subtomograms before alignment. The final average will not be affected by this step. If none is desired, choose 'None'. This can greatly help alignment if you have low contrasty subtomograrm and/or are trying to align a small asymmetric feature on an otherwise symmetric particle.",
    "WIDGETS":[
      "preprocess"
    ]
  },
  {
    "TITLE":"Mask subtomos",
    "INST":"If desired, select masking to apply to subtomographs prior to alignment. The final average will not be affected by this step. If none is desired, choose 'None'. Masking can aid alignment by removing background influences such as neighboring particles.",
    "WIDGETS":[
      "mask"
    ]
  },
  {
    "TITLE":"Course aligner",
    "INST":"Select the course aligner. Use rotate_translate_3d for almost all cases. Next choose the align comparitor. For now always select ccc.tomo unless you want to experiment with fsc.tomo, but you will have neede to find the missing wedge using e2wedge.py",
    "WIDGETS":[
      "align",
      "aligncmp"
    ]
  },
  {
    "TITLE":"Refine aligner",
    "INST":"Select the refine aligner. If you have high contrasty particles you can use refine_3d, otheriwse, use refine_3d_grid, which is better for low contasty particles(but is slower). Also select a comparitor, always use the smae compariotr that you used for the course aligner.",
    "WIDGETS":[
      "ralign",
      "raligncmp"
    ]
  },
  {
    "TITLE":"Postprocess average",
    "INST":"If desired, you can postprocess your subtomogram average (i.e. filter).  If none is desired, choose 'None'.",
    "WIDGETS":[
      "postprocess"
    ]
  },
  {
    "TITLE":"EMAN2 paralleism",
    "INST":"Select the EMAN2 paralleism. You can choose thread(SMP) mpi, or dc(distributed computing)",
    "WIDGETS":[
      "parallel"
    ]
  }
]
